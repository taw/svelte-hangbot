{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Keyboard.svelte",
    "RobotGallows.svelte",
    "WordGuessed.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import RobotGallows from \"./RobotGallows.svelte\";\n  import Keyboard from \"./Keyboard.svelte\";\n  import WordGuessed from \"./WordGuessed.svelte\";\n  import {dictionary} from \"./dictionary.js\";\n\n  let lettersChosen = [];\n  let word = randomElement(dictionary);\n  let stage = 0;\n  let enabled = true;\n\n  console.log(\"word is\", word);\n\n  function randomElement(array) {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  function badGuess(letter) {\n    return !word.toUpperCase().includes(letter.toUpperCase())\n  }\n\n  function isGameWon() {\n    let characters = word.toUpperCase().split(\"\")\n    return (characters.every(c => lettersChosen.includes(c)))\n  }\n\n  function onLetter(letter) {\n    lettersChosen = [...lettersChosen, letter];\n\n    if (badGuess(letter)) {\n      stage += 1;\n    }\n    if (isGameWon()) {\n      alert(\"YOU WON!\")\n      enabled = false;\n    }\n    if (stage == 8) {\n      alert(`GAME LOST! Word was ${word}`);\n      enabled = false\n    }\n    console.log(\"letter\", stage, lettersChosen);\n  }\n\n  function restart() {\n    lettersChosen = [];\n    word = randomElement(dictionary);\n    stage = 0;\n    enabled = true;\n  }\n</script>\n\n<style>\n  header {\n    font-size: 400%;\n  }\n  body {\n    margin: 0 auto;\n  }\n</style>\n\n<header>Hangbot</header>\n\n<RobotGallows stage={stage} />\n\n<WordGuessed word={word} lettersChosen={lettersChosen} />\n\n{#if enabled}\n  <Keyboard lettersChosen={lettersChosen} onLetter={onLetter} />\n{:else}\n  <button on:click={restart}>RESTART GAME</button>\n{/if}\n\n",
    "<script>\n  export let lettersChosen;\n  export let onLetter;\n\n  let letters = [\n    \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"_\"\n  ]\n</script>\n\n<div>\n  {#each letters as letter}\n    {#if lettersChosen.includes(letter)}\n      <button disabled>{letter}</button>\n    {:else}\n      <button on:click={() => onLetter(letter)}>{letter}</button>\n    {/if}\n  {/each}\n</div>\n\n<style>\n  div {\n    display: flex;\n  }\n</style>\n",
    "<script>\n  export let stage = 0;\n</script>\n\n<div class=\"gallows\">\n  <div class=\"robot stage1\" class:hide={stage < 1}>ðŸ¤–</div>\n  <div class=\"robot stage2\" class:hide={stage < 2}></div>\n  <div class=\"robot stage3\" class:hide={stage < 3}></div>\n  <div class=\"robot stage4\" class:hide={stage < 4}></div>\n  <div class=\"robot stage5\" class:hide={stage < 5}></div>\n  <div class=\"robot stage6\" class:hide={stage < 6}></div>\n  <div class=\"robot stage7\" class:hide={stage < 7}>ðŸš”</div>\n  <div class=\"robot stage8\" class:hide={stage < 8}>ðŸš”</div>\n</div>\n\nHanging of ðŸ¤– at stage {stage} of 8.\n\n<style>\n  .gallows {\n    display: inline-block;\n    margin: auto;\n    height: 200px;\n    height: 200px;\n    position: relative;\n  }\n  .robot {\n    display:  inline-block;\n    position: absolute;\n    background-color: blue;\n    text-align: center;\n  }\n  .stage1 {\n    height: 20px;\n    width: 20px;\n    top: 0px;\n    left: 90px;\n  }\n  .stage2 {\n    height: 80px;\n    width: 60px;\n    top: 20px;\n    left: 70px;\n  }\n  .stage3 {\n    height: 10px;\n    width: 40px;\n    top: 30px;\n    left: 30px;\n  }\n  .stage4 {\n    height: 10px;\n    width: 40px;\n    top: 30px;\n    left: 130px;\n  }\n  .stage5 {\n    height: 40px;\n    width: 10px;\n    top: 100px;\n    left: 80px;\n  }\n  .stage6 {\n    height: 40px;\n    width: 10px;\n    top: 100px;\n    left: 110px;\n  }\n  .stage7 {\n    height: 20px;\n    width: 20px;\n    top: 140px;\n    left: 70px;\n  }\n  .stage8 {\n    height: 20px;\n    width: 20px;\n    top: 140px;\n    left: 110px;\n  }\n  .robot.hide {\n    display: none;\n  }\n</style>\n",
    "<script>\n  export let word;\n  export let lettersChosen;\n</script>\n\n<div class=\"word\">\n  {#each word as char}\n    {#if lettersChosen.includes(char.toUpperCase())}\n      <div class=\"letter guessed\">{char}</div>\n    {:else}\n      <div class=\"letter todo\">?</div>\n    {/if}\n  {/each}\n</div>\n\n<style>\n.word {\n  display: flex;\n}\n.letter {\n  height: 30px;\n  width: 30px;\n  background-color: black;\n  color: white;\n  border: 1px solid grey;\n  text-align: center;\n}\n</style>\n"
  ],
  "names": [],
  "mappings": "AAoDE,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,IAAI,AACjB,CAAC;AClCD,GAAG,eAAC,CAAC,AACH,OAAO,CAAE,IAAI,AACf,CAAC;ACJD,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,OAAO,CAAG,YAAY,CACtB,QAAQ,CAAE,QAAQ,CAClB,gBAAgB,CAAE,IAAI,CACtB,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,IAAI,AACZ,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,IAAI,AACZ,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,IAAI,AACZ,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,KAAK,AACb,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,KAAK,CACV,IAAI,CAAE,IAAI,AACZ,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,KAAK,CACV,IAAI,CAAE,KAAK,AACb,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,KAAK,CACV,IAAI,CAAE,IAAI,AACZ,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,KAAK,CACV,IAAI,CAAE,KAAK,AACb,CAAC,AACD,MAAM,KAAK,cAAC,CAAC,AACX,OAAO,CAAE,IAAI,AACf,CAAC;ACjEH,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,AACf,CAAC,AACD,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,KAAK,CACvB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,UAAU,CAAE,MAAM,AACpB,CAAC"
}